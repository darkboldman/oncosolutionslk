---
import Layout from '../layouts/Layout.astro';
import LazyLoad from '../components/LazyLoad.astro';
import ProjectCard from '../components/ProjectCard.astro';
import projects from '../data/projects.json';

// Helper function to safely get search params with type safety
function getQueryParam(param: string, defaultValue: string = ''): string {
  const value = Astro.url.searchParams.get(param);
  return value !== null ? value : defaultValue;
}

// Sort projects - featured projects first, then by year (newest first)
const sortedProjects = [...projects].sort((a, b) => {
  // First sort by featured status
  if (a.featured === 'yes' && b.featured !== 'yes') return -1;
  if (a.featured !== 'yes' && b.featured === 'yes') return 1;
  
  // Then sort by year (descending)
  return b.year - a.year;
});

// Set up pagination
const projectsPerPage = 12;
const currentPage = parseInt(getQueryParam('page', '1'));
const totalProjects = sortedProjects.length;
const totalPages = Math.ceil(totalProjects / projectsPerPage);

// Calculate the start and end indices for the current page
const startIndex = (currentPage - 1) * projectsPerPage;
const endIndex = Math.min(startIndex + projectsPerPage, totalProjects);

// Get projects for the current page
const projectsForCurrentPage = sortedProjects.slice(startIndex, endIndex);

// Generate pagination link
function generatePaginationLink(pageNumber: number): string {
  return pageNumber === 1 ? '/projects' : `/projects?page=${pageNumber}`;
}
---

<Layout title="Our Projects">
  <div class="container">
    <div class="section-header">
      <h3 class="section-title">What we have done</h3>
      <h2 class="section-heading">LEARN MORE ABOUT OUR <span>PROJECTS</span></h2>
      <p class="section-subtitle">Discover how Onco Solutions transforms commercial spaces with intelligent lighting automation & LED lighting â€” delivering excellence across Sri Lanka and beyond.</p>
    </div>
    
    <div class="projects-grid">
      {projectsForCurrentPage.length > 0 ? (
        projectsForCurrentPage.map(project => (
          <LazyLoad>
            <div class="project-item">
              <ProjectCard 
                name={project.name}
                featured={project.featured}
                year={project.year}
                scope={project.scope}
                description={project.description}
                clientUrl={project.clientUrl}
                location={project.location}
                imageUrl={project.imageUrl}
                slug={project.slug}
              />
            </div>
          </LazyLoad>
        ))
      ) : (
        <div class="no-projects">
          <p>No projects found.</p>
        </div>
      )}
    </div>

    {/* Pagination - Only show if there are multiple pages */}
    {totalPages > 1 && (
      <div class="pagination">
        {currentPage > 1 && (
          <a href={generatePaginationLink(currentPage - 1)} class="pagination-link prev">
            &larr; Previous
          </a>
        )}
        
        <div class="pagination-numbers">
          {Array.from({ length: totalPages }, (_, i) => i + 1).map(pageNum => (
            <a 
              href={generatePaginationLink(pageNum)} 
              class={`pagination-number ${pageNum === currentPage ? 'active' : ''}`}
            >
              {pageNum}
            </a>
          ))}
        </div>
        
        {currentPage < totalPages && (
          <a href={generatePaginationLink(currentPage + 1)} class="pagination-link next">
            Next &rarr;
          </a>
        )}
      </div>
    )}
  </div>
</Layout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .section-header {
    text-align: center;
    margin: 3rem 0;
  }

  .section-title {
    font-size: 1.25rem;
    color: #666;
    margin-bottom: 0.5rem;
  }

  .section-heading {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .section-heading span {
    color: #3182ce;
  }

  .section-subtitle {
    font-size: 1.1rem;
    color: #666;
    max-width: 700px;
    margin: 0 auto;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-bottom: 3rem;
    min-height: 300px; /* Ensure grid has minimum height even when empty */
  }

  .no-projects {
    grid-column: 1 / -1;
    text-align: center;
    padding: 3rem 0;
    color: #718096;
    font-size: 1.25rem;
  }

  /* Pagination styles */
  .pagination {
    margin: 3rem 0 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }

  .pagination-link {
    display: inline-flex;
    padding: 0.5rem 1rem;
    background-color: #e2e8f0;
    color: #4a5568;
    border-radius: 0.375rem;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .pagination-link:hover {
    background-color: #cbd5e0;
  }

  .pagination-numbers {
    display: flex;
    gap: 0.5rem;
  }

  .pagination-number {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 2.5rem;
    height: 2.5rem;
    background-color: #e2e8f0;
    color: #4a5568;
    border-radius: 0.375rem;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .pagination-number:hover {
    background-color: #cbd5e0;
  }

  .pagination-number.active {
    background-color: #3182ce;
    color: white;
  }

  /* Responsive design */
  @media (max-width: 1024px) {
    .projects-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .section-heading {
      font-size: 2.2rem;
    }
  }

  @media (max-width: 640px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
    
    .section-heading {
      font-size: 1.8rem;
    }
    
    .pagination-numbers {
      gap: 0.25rem;
    }
    
    .pagination-number {
      width: 2rem;
      height: 2rem;
      font-size: 0.875rem;
    }
  }
</style>

<script>
  // Handle browser back/forward navigation
  window.addEventListener('popstate', () => {
    location.reload();
  });

  // Store current page in localStorage when clicking on a project
  document.addEventListener('DOMContentLoaded', () => {
    // Get current page number from URL or default to 1
    const urlParams = new URLSearchParams(window.location.search);
    const currentPage = urlParams.get('page') || '1';
    
    // Store the current page in localStorage
    localStorage.setItem('lastProjectsPage', currentPage);
    
    // Add click event listeners to all project cards
    const projectLinks = document.querySelectorAll('.project-item a');
    projectLinks.forEach(link => {
      link.addEventListener('click', () => {
        localStorage.setItem('lastProjectsPage', currentPage);
      });
    });
  });
</script>