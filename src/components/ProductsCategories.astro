---
// ProductsCategories.astro
import productsData from '../data/products.json';

// Use the same slugify function as in your products page for consistency
function slugify(str: string): string {
  return str.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');
}

// Get the current category from URL (if we're on the products page)
const currentCategory = Astro.url.pathname.includes('/products')
  ? Astro.url.searchParams.get('category') || 'all'
  : null;

// Extract unique categories with their images
const categories = Array.from(
  new Set(
    productsData
      .filter(product => product.category !== undefined)
      .map(product => product.category as string)
  )
).sort().map(category => {
  // Find a product from this category to get the image
  const product = productsData.find(p => p.category === category);
  const slug = slugify(category);
  
  return {
    name: category,
    slug,
    catImage: product?.catImage || '/images/default-category.png',
    featured: product?.featured === 'yes',
    isActive: currentCategory === slug
  };
});
---

<section class="products-categories">
  <div class="container">
    <div class="categories-header">
        <h3 class="categories-title">Our Categories</h3>
        <h2 class="categories-heading">LEARN MORE ABOUT OUR <span>CATEGORIES</span></h2>
        <p class="categories-subtitle">Discover the right solutions for your projects â€” cutting-edge smart lighting solutions, professional-grade LED systems, or specialized accessories - browse our product categories and experience technology that makes a difference.</p>
      </div>
    <div class="categories-grid">
      {/* Add an "All Products" category card */}
      <a 
        href="/products" 
        class={`category-card ${currentCategory === 'all' || !currentCategory ? 'active' : ''}`}
        data-category="all"
      >
        <div class="category-image">
          <img src="/images/all-icon.png" alt="All Products" />
        </div>
        <h3 class="category-name">All Products</h3>
      </a>
      
      {/* Map through each category */}
      {categories.map((category) => (
        <a 
          href={`/products?category=${category.slug}`} 
          class={`category-card ${category.featured ? 'featured' : ''} ${category.isActive ? 'active' : ''}`}
          data-category={category.slug}
        >
          <div class="category-image">
            <img src={category.catImage} alt={category.name} />
          </div>
          <h3 class="category-name">{category.name}</h3>
        </a>
      ))}
    </div>
  </div>
</section>

<style>
  :root {
    --primary-color: rgba(41, 164, 240, 0.9);
    --primary-color-hover: rgba(41, 164, 240, 1);
  }
  
  .products-categories {
    padding: 4rem 0;
    background-color: #f5f5f5;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .categories-header {
        text-align: center;
        margin-bottom: 60px;
    }

    .categories-title {
        font-size: 16px;
        text-transform: uppercase;
        letter-spacing: 2px;
        color: #777;
        margin-bottom: 15px;
    }

    .categories-heading {
        font-size: 42px;
        font-weight: 700;
        color: #2d3047;
        margin-bottom: 20px;
    }

    .categories-heading span {
        color: rgba(85, 187, 250, 0.9);
    }

    .categories-subtitle {
        max-width: 800px;
        margin: 0 auto;
        color: #666;
    }
  
  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
  }
  
  .category-card {
    background-color: #edf2f7;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    position: relative;
    border: 2px solid transparent;
  }
  
  .category-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    border-color: var(--primary-color);
    box-shadow: 0 5px 20px rgba(41, 164, 240, 0.3);
    background-color: var(--primary-color);
  }
  
  /* Active state styling */
  .category-card.active {
    border-color: var(--primary-color);
    box-shadow: 0 5px 20px rgba(41, 164, 240, 0.3);
  }
  
  .category-card.active::after {
    content: '';
    position: absolute;
    top: 10px;
    right: 10px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
  }
  
  /* .category-card.featured {
    background-color: #edf2f7;
  } */
  
  .category-image {
    height: 180px;
    overflow: hidden;
    background-color: #f7fafc;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .category-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .category-card:hover .category-image img {
    transform: scale(1.05);
  }
  
  .category-name {
    padding: 1rem;
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
    color: rgb(16, 37, 128);
  }
  
  .category-card:hover .category-name {
    /* color: var(--primary-color); */
    color: #fff;
    font-weight: 600;
  }
  .category-card.active.category-name {
    /* color: var(--primary-color); */
    color: #fff;
    font-weight: 600;
  }
  
  @media (max-width: 768px) {
    .categories-grid {
      grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    }
  }
  
  @media (max-width: 480px) {
    .categories-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .category-image {
      height: 140px;
    }
  }
</style>

<script>
  // This script will run on both homepage and products page
  document.addEventListener('DOMContentLoaded', () => {
    // Get the current category from URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const currentCategory = urlParams.get('category') || 'all';
    
    // If we're on the products page, highlight the active category
    if (window.location.pathname.includes('/products')) {
      const categoryCards = document.querySelectorAll('.category-card');
      
      categoryCards.forEach(card => {
        const cardCategory = card.getAttribute('data-category');
        
        if (cardCategory === currentCategory) {
          card.classList.add('active');
        } else {
          card.classList.remove('active');
        }
      });
    }
  });
</script>